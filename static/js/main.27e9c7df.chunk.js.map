{"version":3,"sources":["components/Navbar/Navbar.tsx","pages/HomePage/HomePage.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/Loader/Loader.tsx","pages/PeoplePage/PeoplePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","role","to","isActive","cn","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","name","sex","slug","PeopleTable","people","slugSelected","map","personList","born","died","mother","motherName","father","fatherName","Loader","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","useParams","useEffect","find","item","preparedPeople","catch","finally","length","NotFoundPage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"6PAGaA,EAAS,WACpB,OACE,qBACE,UAAQ,MACRC,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEE,GAAG,IACHF,UAAW,gBAAGG,EAAH,EAAGA,SAAH,OAAkBC,IAAG,cAAe,CAC7C,8BAA+BD,GADtB,EAFb,kBASA,cAAC,IAAD,CACED,GAAG,UACHF,UAAW,gBAAGG,EAAH,EAAGA,SAAH,OAAkBC,IAAG,cAAe,CAC7C,8BAA+BD,GADtB,EAFb,0BAYT,EClCYE,G,MAAW,WACtB,OACE,oBAAIL,UAAU,QAAd,sBAEH,G,sBCKM,SAASM,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,CCNM,IAAMQ,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpCC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,IAAKC,EAASH,EAATG,KAEnB,OACE,cAAC,IAAD,CACEjB,GAAE,kBAAaiB,GACfnB,UAAWI,IAAG,CAAE,kBAA2B,MAARc,IAFrC,SAIGD,GAGN,ECVYG,EAA+B,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACrD,OACE,wBACE,UAAQ,cACRtB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAGJ,gCACGqB,EAAOE,KAAI,SAAAC,GACV,OACE,qBACE,UAAQ,SAERxB,UAAWI,IAAG,CACZ,yBAA0BoB,EAAWL,OAASG,IAJlD,UAOE,6BACE,cAAC,EAAD,CAAYN,OAAQQ,MAGtB,6BAAKA,EAAWN,MAChB,6BAAKM,EAAWC,OAChB,6BAAKD,EAAWE,OAChB,6BACGF,EAAWG,OACP,cAAC,EAAD,CAAYX,OAAQQ,EAAWG,SAChCH,EAAWI,YAAc,MAE/B,6BACGJ,EAAWK,OACP,cAAC,EAAD,CAAYb,OAAQQ,EAAWK,SAChCL,EAAWM,YAAc,QApB1BN,EAAWL,KAwBrB,QAIR,ECxDYY,G,MAAS,kBACpB,qBAAK/B,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCKTgC,EAAa,WACxB,MAA4BC,mBAAmB,IAA/C,mBAAOZ,EAAP,KAAea,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEQnB,EAASoB,cAATpB,KA0BR,OAxBAqB,qBAAU,WACRJ,GAAa,GACb9B,IACGK,MAAK,SAAAE,GAcJ,OAb+BA,EAASU,KAAI,SAAAP,GAC1C,IAAMW,EAASd,EACZ4B,MAAK,SAAAC,GAAI,OAAIA,EAAKzB,OAASD,EAAOY,UAAzB,IACNC,EAAShB,EACZ4B,MAAK,SAAAC,GAAI,OAAIA,EAAKzB,OAASD,EAAOc,UAAzB,IAEZ,OAAO,YAAC,eACHd,GADL,IAEEW,SACAE,UAEH,GAGF,IACAlB,MAAK,SAAAgC,GAAc,OAAIT,EAAUS,EAAd,IACnBC,OAAM,kBAAMN,GAAS,EAAf,IACNO,SAAQ,kBAAMT,GAAa,EAAnB,GACZ,GAAE,IAGD,qCACE,oBAAIpC,UAAU,QAAd,yBACCmC,GACC,cAAC,EAAD,IAEDE,GACC,mBAAG,UAAQ,qBAAqBrC,UAAU,kBAA1C,kCAIiB,IAAlBqB,EAAOyB,SAAiBT,IAAUF,GACjC,mBAAG,UAAQ,kBAAX,+CAIDd,EAAOyB,OAAS,GACf,cAAC,EAAD,CAAazB,OAAQA,EAAQC,aAAcH,MAIlD,EC3DY4B,EAAe,WAC1B,OACE,oBAAI/C,UAAU,QAAd,2BAEH,ECIYgD,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IACA,sBAAMhD,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUhD,GAAG,IAAIiD,SAAO,MACrD,eAAC,IAAD,CAAOF,KAAK,SAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,SAE/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eAZhB,ECAnBG,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.27e9c7df.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={cn({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n  slugSelected?: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, slugSelected }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(personList => {\n          return (\n            <tr\n              data-cy=\"person\"\n              key={personList.slug}\n              className={cn({\n                'has-background-warning': personList.slug === slugSelected,\n              })}\n            >\n              <td>\n                <PersonLink person={personList} />\n              </td>\n\n              <td>{personList.sex}</td>\n              <td>{personList.born}</td>\n              <td>{personList.died}</td>\n              <td>\n                {personList.mother\n                  ? (<PersonLink person={personList.mother} />)\n                  : personList.motherName || '-'}\n              </td>\n              <td>\n                {personList.father\n                  ? (<PersonLink person={personList.father} />)\n                  : personList.fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { Loader } from '../../components/Loader';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { slug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(response => {\n        const peopleServer: Person[] = response.map(person => {\n          const mother = response\n            .find(item => item.name === person.motherName);\n          const father = response\n            .find(item => item.name === person.fatherName);\n\n          return ({\n            ...person,\n            mother,\n            father,\n          });\n        });\n\n        return peopleServer;\n      })\n      .then(preparedPeople => setPeople(preparedPeople))\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {isLoading && (\n        <Loader />\n      )}\n      {error && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n      {people.length === 0 && !error && !isLoading && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n      {people.length > 0 && (\n        <PeopleTable people={people} slugSelected={slug} />\n      )}\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}